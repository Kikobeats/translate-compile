{"name":"translate-compile","tagline":"angular-translate angular pre-compiler markup translate-compile grunt plugin","body":"# grunt-translate-compile\r\n\r\n> A pre-compiler for angular-translate based on TL: a simple write-less markup specially designed for angular-translate.\r\n\r\n   - [1. Translation Markup - TL](#user-content-1-translation-markup---tl)\r\n     + [1.1 - Hello World from TL](#user-content-11-hello-world-from-tl)\r\n     + [1.2 - Type translations keys only once for all your languages](#user-content-12-type-translations-keys-only-once-for-all-your-languages)\r\n     + [1.3 - Type repeated translation values only once too](#user-content-13-type-repeated-translation-values-only-once-too)\r\n     + [1.4 - Organize your translations into multiple files](#user-content-14-organize-your-translations-into-multiple-files)\r\n   - [2. Grunt Plugin](#user-content-2-grunt-plugin)\r\n     + [2.1 - Getting Started](#user-content-21-getting-started)\r\n     + [2.2 - The \"translate_compile\" task - Overview](#user-content-22-the-translate_compile-task---overview)\r\n     + [2.3 - Options](#user-content-23-options)\r\n\r\n## 1. Translation Markup - TL\r\n\r\nThe translation markup intends to drastically reduce the amount of typing needed to translate your app, by keeping it simpler and improving it's maintenance.\r\n\r\nBriefing: A translation file begins with the declaration of all supported languages of your application. A custom numeric code (key) must be assigned to each one of the declared languages. In the sample that comes next, we're saying that [american english code is 1], [brazilian portuguese is 2] and [spanish from spain is 3]. Translation values are assigned directly to the language key.\r\n\r\n> **Tabs must be used for indentation. Spaces are not yet allowed.**\r\n> **Indentation must be respected to avoid unwanted results.**\r\n\r\n### 1.1 - Hello World from TL\r\n```js\r\nLANGUAGES\r\n  1:english\r\n  2:deutsch\r\n\r\nHELLO\r\n  WORLD\r\n    1:Hello World\r\n    2:Hallo Welt\r\n```\r\n**Compiled:**\r\n```js\r\nvar angTranslations = {\r\n  \"english\": {\r\n    \"HELLO\": {\r\n      \"WORLD\": \"Hello World\"\r\n    }\r\n  },\r\n  \"deutsch\": {\r\n    \"HELLO\": {\r\n      \"WORLD\": \"Hallo Welt\"\r\n    }\r\n  }\r\n};\r\n```\r\n\r\n### 1.2 - Type translations keys only once for all your languages\r\n```js\r\nLANGUAGES\r\n  1:english\r\n  2:deutsch\r\n  3:spanish\r\n  4:portuguese\r\n\r\nUNITED_STATES\r\n  NAME\r\n    1:United States\r\n    2:Vereinigte Staaten\r\n    3,4:Estados Unidos\r\n  LANGUAGE\r\n    1:English\r\n    2:Englisch\r\n    3:Inglés\r\n    4:Inglês\r\nSPAIN\r\n  NAME\r\n    1:Spain\r\n    2:Spanien\r\n    3:España\r\n    4:Espanha\r\n  LANGUAGE\r\n    1:Spanish\r\n    2:Spanisch\r\n    3:Español\r\n    4:Espanhol\r\nBRAZIL\r\n  NAME\r\n    1:Brazil\r\n    2:Brasilien\r\n    3,4:Brasil\r\n  LANGUAGE\r\n    1:Portuguese\r\n    2:Portugiesisch\r\n    3:Portugués\r\n    4:Português\r\n```\r\n**Compiled:**\r\n```js\r\nvar angTranslations = {\r\n  \"english\": {\r\n    \"UNITED_STATES\": {\r\n      \"NAME\": \"United States\",\r\n      \"LANGUAGE\": \"English\"\r\n    },\r\n    \"SPAIN\": {\r\n      \"NAME\": \"Spain\",\r\n      \"LANGUAGE\": \"Spanish\"\r\n    },\r\n    \"BRAZIL\": {\r\n      \"NAME\": \"Brazil\",\r\n      \"LANGUAGE\": \"Portuguese\"\r\n    }\r\n  },\r\n  \"deutsch\": {\r\n    \"UNITED_STATES\": {\r\n      \"NAME\": \"Vereinigte Staaten\",\r\n      \"LANGUAGE\": \"Englisch\"\r\n    },\r\n    \"SPAIN\": {\r\n      \"NAME\": \"Spanien\",\r\n      \"LANGUAGE\": \"Spanisch\"\r\n    },\r\n    \"BRAZIL\": {\r\n      \"NAME\": \"Brasilien\",\r\n      \"LANGUAGE\": \"Portugiesisch\"\r\n    }\r\n  },\r\n  \"spanish\": {\r\n    \"UNITED_STATES\": {\r\n      \"NAME\": \"Estados Unidos\",\r\n      \"LANGUAGE\": \"Inglés\"\r\n    },\r\n    \"SPAIN\": {\r\n      \"NAME\": \"España\",\r\n      \"LANGUAGE\": \"Español\"\r\n    },\r\n    \"BRAZIL\": {\r\n      \"NAME\": \"Brasil\",\r\n      \"LANGUAGE\": \"Portugués\"\r\n    }\r\n  },\r\n  \"portuguese\": {\r\n    \"UNITED_STATES\": {\r\n      \"NAME\": \"Estados Unidos\",\r\n      \"LANGUAGE\": \"Inglês\"\r\n    },\r\n    \"SPAIN\": {\r\n      \"NAME\": \"Espanha\",\r\n      \"LANGUAGE\": \"Espanhol\"\r\n    },\r\n    \"BRAZIL\": {\r\n      \"NAME\": \"Brasil\",\r\n      \"LANGUAGE\": \"Português\"\r\n    }\r\n  }\r\n};\r\n```\r\n\r\n> Notice how the writing was significantly reduced as it's no longer needed to rewrite every key for each language, we are also skipping blocks and quotes. Thus we can focus on what really matters: the translations. Maintenance is also greatly improved, as adding a new key will no longer be a hunt for the right spot of each language.\r\n\r\n### 1.3 - Type repeated translation values only once too\r\n```js\r\nLANGUAGES\r\n  1:enUS\r\n  2:ptBR\r\n  3:esES\r\n\r\nCREDIT_CARD\r\n  NAME\r\n    1:Credit Card\r\n    2:Cartão de Crédito\r\n    3:Tarjeta de Crédito\r\n  FLAG\r\n    VISA\r\n      1,2,3:Visa\r\n    MASTERCARD\r\n      1,2,3:Mastercard\r\n    AMEX\r\n      1,2,3:American Express\r\n    DINERS\r\n      1,2,3:Diners\r\n```\r\n**Compiled:**\r\n```js\r\nvar angTranslations = {\r\n  \"enUS\": {\r\n    \"CREDIT_CARD\": {\r\n      \"NAME\": \"Credit Card\",\r\n      \"FLAG\": {\r\n        \"VISA\": \"Visa\",\r\n        \"MASTERCARD\": \"Mastercard\",\r\n        \"AMEX\": \"American Express\",\r\n        \"DINERS\": \"Diners\"\r\n      }\r\n    }\r\n  },\r\n  \"ptBR\": {\r\n    \"CREDIT_CARD\": {\r\n      \"NAME\": \"Cartão de Crédito\",\r\n      \"FLAG\": {\r\n        \"VISA\": \"Visa\",\r\n        \"MASTERCARD\": \"Mastercard\",\r\n        \"AMEX\": \"American Express\",\r\n        \"DINERS\": \"Diners\"\r\n      }\r\n    }\r\n  },\r\n  \"esES\": {\r\n    \"CREDIT_CARD\": {\r\n      \"NAME\": \"Tarjeta de Crédito\",\r\n      \"FLAG\": {\r\n        \"VISA\": \"Visa\",\r\n        \"MASTERCARD\": \"Mastercard\",\r\n        \"AMEX\": \"American Express\",\r\n        \"DINERS\": \"Diners\"\r\n      }\r\n    }\r\n  }\r\n};\r\n```\r\n\r\n### 1.4 - Organize your translations into multiple files\r\n> Although we recommend you to include language declarations in all your translation files, they are only required in the first read translation file. Language declarations will often serve you as legend for language keys/values.\r\n\r\n**File 1: menu.tl**\r\n```js\r\nLANGUAGES\r\n  1:enUs\r\n  2:ptBr\r\n  3:esEs\r\n\r\nMENU\r\n  CART\r\n    EMPTY\r\n      1:Empty Cart\r\n      2:Esvaziar Carrinho\r\n      3:Vaciar Carrito\r\n    CHECKOUT\r\n      1:Checkout\r\n      2:Fechar Pedido\r\n      3:Realizar Pedido\r\n  USER\r\n    LABEL\r\n      1:User\r\n      2:Usuário\r\n      3:Usuario\r\n    DROPDOWN\r\n      EDIT\r\n        1:Edit\r\n        2,3:Editar\r\n      LOGOUT\r\n        1:Logout\r\n        2:Sair\r\n        3:Finalizar la Sesión\r\n```\r\n\r\n**File 2: country.tl**\r\n```js\r\nLANGUAGES\r\n  1:enUs\r\n  2:ptBr\r\n  3:esEs\r\n\r\nCOUNTRY\r\n  USA\r\n    NAME\r\n      1:United States\r\n      2,3:Estados Unidos\r\n    LANGUAGE\r\n      1:English\r\n      2:Inglês\r\n      3:Inglés\r\n  BRAZIL\r\n    NAME\r\n      1:Brazil\r\n      2,3:Brasil\r\n    LANGUAGE\r\n      1:Portuguese\r\n      2:Português\r\n      3:Portugués\r\n  SPAIN\r\n    NAME\r\n      1:Spain\r\n      2:Espanha\r\n      3:España\r\n    LANGUAGE\r\n      1:Spanish\r\n      2:Espanhol\r\n      3:Español\r\n```\r\n\r\n**File 3: us-states.tl**\r\n```js\r\nLANGUAGES\r\n  1:enUs\r\n  2:ptBr\r\n  3:esEs\r\n\r\nCOUNTRY\r\n  USA\r\n    STATES\r\n      CALIFORNIA\r\n        NAME\r\n          1,3:California\r\n          2:Califórnia\r\n        ACRONYM\r\n          1,2,3:CA\r\n      NEW_YORK\r\n        NAME\r\n          1:New York\r\n          2:Nova Iorque\r\n          3:Nueva York\r\n        ACRONYM\r\n          1,2,3:NY\r\n      NORTH_CAROLINA\r\n        NAME\r\n          1:North Carolina\r\n          2:Carolina Do Norte\r\n          3:Carolina del Norte\r\n        ACRONYM\r\n          1,2,3:NC\r\n```\r\n\r\n**Compiled Result:**\r\n\r\n```js\r\nvar angTranslations = {\r\n  \"enUs\": {\r\n    \"COUNTRY\": {\r\n      \"USA\": {\r\n        \"NAME\": \"United States\",\r\n        \"LANGUAGE\": \"English\",\r\n        \"STATES\": {\r\n          \"CALIFORNIA\": {\r\n            \"NAME\": \"California\",\r\n            \"ACRONYM\": \"CA\"\r\n          },\r\n          \"NEW_YORK\": {\r\n            \"NAME\": \"New York\",\r\n            \"ACRONYM\": \"NY\"\r\n          },\r\n          \"NORTH_CAROLINA\": {\r\n            \"NAME\": \"North Carolina\",\r\n            \"ACRONYM\": \"NC\"\r\n          }\r\n        }\r\n      },\r\n      \"BRAZIL\": {\r\n        \"NAME\": \"Brazil\",\r\n        \"LANGUAGE\": \"Portuguese\"\r\n      },\r\n      \"SPAIN\": {\r\n        \"NAME\": \"Spain\",\r\n        \"LANGUAGE\": \"Spanish\"\r\n      }\r\n    },\r\n    \"MENU\": {\r\n      \"CART\": {\r\n        \"EMPTY\": \"Empty Cart\",\r\n        \"CHECKOUT\": \"Checkout\"\r\n      },\r\n      \"USER\": {\r\n        \"LABEL\": \"User\",\r\n        \"DROPDOWN\": {\r\n          \"EDIT\": \"Edit\",\r\n          \"LOGOUT\": \"Logout\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"ptBr\": {\r\n    \"COUNTRY\": {\r\n      \"USA\": {\r\n        \"NAME\": \"Estados Unidos\",\r\n        \"LANGUAGE\": \"Inglês\",\r\n        \"STATES\": {\r\n          \"CALIFORNIA\": {\r\n            \"NAME\": \"Califórnia\",\r\n            \"ACRONYM\": \"CA\"\r\n          },\r\n          \"NEW_YORK\": {\r\n            \"NAME\": \"Nova Iorque\",\r\n            \"ACRONYM\": \"NY\"\r\n          },\r\n          \"NORTH_CAROLINA\": {\r\n            \"NAME\": \"Carolina Do Norte\",\r\n            \"ACRONYM\": \"NC\"\r\n          }\r\n        }\r\n      },\r\n      \"BRAZIL\": {\r\n        \"NAME\": \"Brasil\",\r\n        \"LANGUAGE\": \"Português\"\r\n      },\r\n      \"SPAIN\": {\r\n        \"NAME\": \"Espanha\",\r\n        \"LANGUAGE\": \"Espanhol\"\r\n      }\r\n    },\r\n    \"MENU\": {\r\n      \"CART\": {\r\n        \"EMPTY\": \"Esvaziar Carrinho\",\r\n        \"CHECKOUT\": \"Fechar Pedido\"\r\n      },\r\n      \"USER\": {\r\n        \"LABEL\": \"Usuário\",\r\n        \"DROPDOWN\": {\r\n          \"EDIT\": \"Editar\",\r\n          \"LOGOUT\": \"Sair\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"esEs\": {\r\n    \"COUNTRY\": {\r\n      \"USA\": {\r\n        \"NAME\": \"Estados Unidos\",\r\n        \"LANGUAGE\": \"Inglés\",\r\n        \"STATES\": {\r\n          \"CALIFORNIA\": {\r\n            \"NAME\": \"California\",\r\n            \"ACRONYM\": \"CA\"\r\n          },\r\n          \"NEW_YORK\": {\r\n            \"NAME\": \"Nueva York\",\r\n            \"ACRONYM\": \"NY\"\r\n          },\r\n          \"NORTH_CAROLINA\": {\r\n            \"NAME\": \"Carolina del Norte\",\r\n            \"ACRONYM\": \"NC\"\r\n          }\r\n        }\r\n      },\r\n      \"BRAZIL\": {\r\n        \"NAME\": \"Brasil\",\r\n        \"LANGUAGE\": \"Portugués\"\r\n      },\r\n      \"SPAIN\": {\r\n        \"NAME\": \"España\",\r\n        \"LANGUAGE\": \"Español\"\r\n      }\r\n    },\r\n    \"MENU\": {\r\n      \"CART\": {\r\n        \"EMPTY\": \"Vaciar Carrito\",\r\n        \"CHECKOUT\": \"Realizar Pedido\"\r\n      },\r\n      \"USER\": {\r\n        \"LABEL\": \"Usuario\",\r\n        \"DROPDOWN\": {\r\n          \"EDIT\": \"Editar\",\r\n          \"LOGOUT\": \"Finalizar la Sesión\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n```\r\n\r\n## 2. Grunt Plugin\r\n\r\n### 2.1 - Getting Started\r\nThis plugin requires Grunt `~0.4.5`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-translate-compile --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-translate-compile');\r\n```\r\n\r\n\r\n### 2.2 - The \"translate_compile\" task - Overview\r\n\r\n#### 1. Add the task\r\nIn your project's Gruntfile, add a section named `translate_compile` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  translate_compile: {\r\n    compile: {\r\n      options: {\r\n        // task-specific options go here. refer to options topic\r\n      },\r\n      files: {\r\n        // post-compiling file to the left, pre-compiling files to the right\r\n        'compiled-translations.js': ['translations/*.tl']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n#### 2. Let your server know about it\r\nRemember to include \"translate_compile\" inside your server task so the compilation takes place when you start it (connect/express). Something like:\r\n\r\n```js\r\ngrunt.registerTask('serve', function (target) {\r\n    grunt.task.run([\r\n      'clean:server',\r\n      'translate_compile:compile', // <-- here it is\r\n      'bowerInstall',\r\n      'concurrent:server',\r\n      'autoprefixer',\r\n      'connect:livereload',\r\n      'watch'\r\n    ]);\r\n  });\r\n```\r\n\r\n#### 3. Watch it\r\nFor a better experience, watch for any changes made to your translation files (requires [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch)). Something like:\r\n```js\r\nwatch: {\r\n  tl: {\r\n    files: ['translations/*.tl'],\r\n    tasks: ['translate_compile:compile'],\r\n    options: {\r\n      livereload: true\r\n    }\r\n  }\r\n},\r\n```\r\n\r\n#### 4. Take to your build\r\nAdd the \"translate_compile\" to your build task. Something like:\r\n```js\r\ngrunt.registerTask('build', [\r\n    'clean:dist'\r\n    'bowerInstall',\r\n    'useminPrepare',\r\n    'concurrent:dist',\r\n    'autoprefixer',\r\n    'concat',\r\n    'ngmin',\r\n    'translate_compile:compile', // <-- here it is\r\n    'copy:dist',\r\n    'cdnify',\r\n    'cssmin',\r\n    'uglify',\r\n    'rev',\r\n    'usemin',\r\n    'htmlmin'\r\n  ]);\r\n```\r\n\r\n**You should now be good to go!**\r\n\r\n### 2.3 - Options\r\n\r\n#### options.translationVar\r\nType: `String`\r\nDefault value: `'angTranslations'`\r\n\r\nDetermines the name of the compiled variable. Ex: `var angTranslations = {\"usEn\":{...}}`\r\n\r\n#### options.multipleObjects\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nIf `multipleObjects` is set to `true` there will no longer be only one root variable like `angTranslations`. Translations will now be splitted into one object per language. Ex: `var enUs = {...}; var ptBr = {...}; var esEs = {...};` Variable names will the ones declared in the `LANGUAGES` section.\r\n\r\n#### options.asJson\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nShould this value be set to true there will be no variable assignment inside the file, only the resulting json will be there.\r\n\r\n## 3. Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## 4. Release History\r\n_(Nothing yet)_","google":"UA-38498266-4","note":"Don't delete this file! It's used internally to help with page regeneration."}